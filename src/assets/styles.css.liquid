/* Settings-generated styles */
{% if settings.pg_details_on_hover == true %}
  .product-grid .card__content, .product-grid .card--standard .card__content {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: flex;
    z-index: 2;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    margin: 0;
    padding: 20px;
    text-align: var(--card-text-alignment);
    transition: opacity 200ms ease;
    color: rgb(var(--color-foreground));
    --color-link: var(--color-foreground);
    {% case settings.pg_color %}
      {% when 'accent-1' %}
    --color-foreground: var(--color-base-solid-button-labels);
      {% when 'accent-2' %}
    --color-foreground: var(--color-base-solid-button-labels);
      {% when 'transparent-light' %}
    --color-foreground: 255, 255, 255;
      {% when 'transparent-dark' %}
    --color-foreground: 0, 0 , 0;
      {% when 'background-1' %}
    --color-foreground: var(--color-base-text);
      {% when 'background-2' %}
    --color-foreground: var(--color-base-text);
      {% when 'inverse' %}
    --color-foreground: var(--color-base-background-1)
    {% endcase %}
  }

  .product-grid .card__inner .card__content {
    display: none;
  }

  .product-grid .card {
    background: rgb(var(--color-background));
    {% case settings.pg_color %}
      {% when 'accent-1' %}
    --color-background: var(--gradient-base-accent-1);
    --gradient-background: var(--gradient-base-accent-1);
      {% when 'accent-2' %}
    --color-background: var(--gradient-base-accent-2);
    --gradient-background: var(--gradient-base-accent-2);
      {% when 'transparent-light' %}
    --color-background: transparent;
    --gradient-background: transparent;
      {% when 'transparent-dark' %}
    --color-background: transparent;
    --gradient-background: transparent;
      {% when 'background-1' %}
    --color-background: var(--color-base-background-1);
    --gradient-background: var(--gradient-base-background-1);
      {% when 'background-2' %}
    --color-background: var(--color-base-background-2);
    --gradient-background: var(--gradient-base-background-2);
      {% when 'inverse' %}
    --color-background: var(--color-base-text);
    {% endcase %}
  }

  .product-grid .card > .card__content > * {
    margin: auto;
    flex: 0 0 auto;
    width: 100%;
    transition: transform 200ms 50ms ease, opacity 200ms 50ms ease;
    transform: translateY(10px);
    opacity: 0;
  }

  .product-grid .card>.card__content .badge {
    background-color: rgb(var(--color-background));
  }

  .product-grid .card--standard>.card__content .card__badge {
    display: block;
    margin: 1rem auto 1rem 0;
  }

  .product-grid .price {
    justify-content: center;
  }

  .product-grid .card__content > *:nth-child(2) {
    transition-delay: 100ms
  }
  .product-grid .card__content > *:nth-child(3) {
    transition-delay: 150ms
  }
  .product-grid .card__content > *:nth-child(4) {
    transition-delay: 200ms
  }

  .product-grid .card-wrapper:hover .card-information {
    opacity: 1;
  }
  .product-grid .card-wrapper .card--product {
    position: relative;
    z-index: 1;
    transition: opacity 150ms ease;
  }
  .product-grid .card-wrapper .card__media {
    transition: opacity 150ms ease;
  }
  .product-grid .card-wrapper:hover .card__media {
    opacity: 0.45;
  }
  .product-grid .card-wrapper:hover .card__content > * {
    opacity: 1;
    transform: translateY(0);
    text-shadow: 1px 1px 12px rgba(var(--color-background), 0.2));
  }

{% endif %}

{% if settings.expand_page_width == true %}
  @media (min-width: 1650px) {
    .page-width {
      padding-left: 0;
      padding-right: 0;
    }
  }
{% endif %}


/*Swatches */
{%- assign swatch_hexes = settings.swatch-hexes | strip | newline_to_br | split: '<br />' -%}
{%- for hex in swatch_hexes -%}
  {% assign hex_info = hex | split: ':' %}

  {% assign hex_color = hex_info[0] | strip %}
  {% assign offset = hex_color | size | plus: 2 %}
  {% assign remainder = hex.size | minus: offset %}
  {% comment %} {% assign hex_code = hex_info[1] | strip %}
  {% if hex_info[2] %}
    {% assign hex_code = hex_code | append: hex_info[2] %}
  {% endif %} {% endcomment %}
  {% assign hex_code = hex | slice: offset, remainder %}
  .swatch--{{ hex_color }} label {
  {% if hex_code contains "image" or hex_code contains "jpg" %}
    {% capture img %}{{ hex_color }}.jpg{% endcapture %}

    background-image: url({{ img | file_img_url: "90x90" }});
  {% elsif hex_code contains "png" %}
    {% capture img %}{{ hex_color }}.png{% endcapture %}

    background-image: url({{ img | file_img_url: "90x90" }});
  {% else %}
    background: {{ hex_code }} !important;
  {% endif %}
  }
{%-endfor-%}
/* end settings-generated-styles */



