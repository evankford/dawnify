<link rel="stylesheet" href="{{ 'component-list-menu.css' | asset_url }}" media="print" onload="this.media='all'">
<link rel="stylesheet" href="{{ 'component-search.css' | asset_url }}" media="print" onload="this.media='all'">
<link rel="stylesheet" href="{{ 'component-menu-drawer.css' | asset_url }}" media="print" onload="this.media='all'">
<link rel="stylesheet" href="{{ 'component-header-drawer.css' | asset_url }}" media="print" onload="this.media='all'">
<link rel="stylesheet" href="{{ 'component-cart-notification.css' | asset_url }}" media="print" onload="this.media='all'">

<noscript>{{ 'component-list-menu.css' | asset_url | stylesheet_tag }}</noscript>
<noscript>{{ 'component-search.css' | asset_url | stylesheet_tag }}</noscript>
<noscript>{{ 'component-menu-drawer.css' | asset_url | stylesheet_tag }}</noscript>
<noscript>{{ 'component-header-drawer.css' | asset_url | stylesheet_tag }}</noscript>
<noscript>{{ 'component-cart-notification.css' | asset_url | stylesheet_tag }}</noscript>

<script src="{{ 'details-disclosure.js' | asset_url }}" defer="defer"></script>
<script src="{{ 'details-modal.js' | asset_url }}" defer="defer"></script>
<script src="{{ 'cart-notification.js' | asset_url }}" defer="defer"></script>

{%- if settings.predictive_search_enabled -%}
  <link rel="stylesheet" href="{{ 'component-price.css' | asset_url }}" media="print" onload="this.media='all'">
  <link rel="stylesheet" href="{{ 'component-loading-overlay.css' | asset_url }}" media="print" onload="this.media='all'">
{%- endif -%}

{% comment %} Icons {% endcomment %}
{% render 'icon-search' %}

{% comment %} figure out if the first thing is the logo, then add a class if so {% endcomment %}
{% assign first_type = section.blocks.first.type %}
{% assign json_logo = false %}
{% assign is_first_button = true %}
<style>
.header-wrapper {
  {% if section.settings.background != blank and section.settings.background != 'rgba(0,0,0,0)' %}
 --bg: {{ section.settings.background | default: "var(--color-background)" }};
 --color-background: {{ section.settings.background.red }}, {{ section.settings.background.green }}, {{ section.settings.background.blue }};
 {% endif %}
 {% if section.settings.color != blank %}
 --txt: {{ section.settings.color | default: "rgba(var(--color-foreground), 0.75)" }};
 --color-foreground: {{ section.settings.color.red }}, {{ section.settings.color.green }}, {{ section.settings.color.blue }} ;
 {% endif %}
 --txt-h: {{ section.settings.color_hover | default: "rgba(var(--color-foreground), 1))" }};
 --otxt: {{ section.settings.color_overlay | default: "rgba(255, 255,255,0.75)" }};
 --otxt-h: {{ section.settings.color_overlay_hover | default: '#ffffff' }};
}

{% if section.settings.background == 'rgba(0,0,0,0)' %}
  .menu-drawer {background-color: white;}
{% else %}
{% endif %}
.overlay-active .header-wrapper {
  --color-foreground: {{ section.settings.color_overlay.red }}, {{ section.settings.color_overlay.green }}, {{ section.settings.color_overlay.blue }};
}
{% if section.settings.enable_shadow %}
.animate .header-wrapper::before {
    box-shadow: 4px 4px 18px rgb(0 0 0 / 10%);

}
{% endif %}
</style>
<site-header{% if section.settings.enable_sticky_header %} data-sticky {% endif %}{% if section.settings.enable_overlay %} data-overlay="true" {% endif %} class="header-wrapper{% if section.settings.show_line_separator %} header-wrapper--border-bottom{% endif %} {% if section.settings.header_shadow == true %} shadow {% endif %}">
  <header class="header first--{{ first_type }} layout--{{ section.settings.layout }} page-width{% if section.settings.menu != blank %} header--has-menu{% endif %}">
    {% assign index = 0 %}
    {% assign in_group = false %}
    {%- for block in section.blocks -%}
      {% comment %} Start new group if logo, mobile menu, or last item{% endcomment %}
      {% if index >= 1 and in_group == true %}
        {% if block.type == "logo" %}
          </div><!--\.header__group-->
          {% assign in_group = false %}
        {% endif %}
      {% endif %}
      {% unless in_group %}

      {% comment %}Check children to see if all group children are invisible {% endcomment %}
        {% assign vb_small = "hide--small" %}
        {% assign vb_medium = "hide--medium" %}
        {% assign vb_desktop = "hide--desktop" %}
        {% for i in (forloop.index0 .. section.blocks.size) %}
          {% assign sub_block = section.blocks[i] %}
          {% assign next_index = i | plus: 1 %}
          {% assign next_block = section.blocks[next_index] %}
          <!-- Type: {{sub_block.type }} - VBSmall: {{ sub_block.settings.visible_small }} -->
          {% if sub_block.settings.visible_small == true %}
            {% assign vb_small = '' %}
          {% endif %}
          {% if sub_block.settings.visible_medium == true %}
            {% assign vb_medium = '' %}
          {% endif %}
          {% if sub_block.settings.visible_large == true %}
            {% assign vb_desktop = '' %}
          {% endif %}
         {% if next_block.type == 'spacer' or next_block.type == 'logo' or next_block.type == 'mobile_menu' %}
            {% break %}
          {% endif %}
          {% if sub_block.type == 'spacer' or sub_block.type == 'logo' or sub_block.type == 'mobile_menu' %}
            {% break %}
          {% endif %}
          {% if next_block.type == "socials" and block.type == "menu" %}
            {% break %}
          {% endif %}
          {% if next_block.type == "menu" and sub_block.type == "socials" %}
            {% break %}
          {% endif %}
          {% if sub_block.type == 'menu' and section.settings.layout == 'logo-stacked' %}
            {% break %}
          {% endif %}

        {% endfor %}
        <div class="header__group {% if block.type == 'logo' %}header__group--logo{% endif %} {% if block.type == 'mobile_menu' %}header__group--mobile_menu{% endif %} {{ vb_small }} {{ vb_medium }} {{ vb_desktop }}">
        {% assign in_group = true %}
      {%endunless%}
    {% comment %} Group Contents {% endcomment %}
    <div class="header__item type--{{ block.type }}{% unless block.settings.visible_large %} hide--desktop {% endunless %}{% unless block.settings.visible_medium %} hide--medium {% endunless %}{% unless block.settings.visible_small %} hide--small {% endunless %} {% if block.type == 'button' and is_first_button %}{% assign is_first_button = false %}first-button{% endif %} {% if block.settings.include_socials != blank %}socials-layout--{{ block.settings.include_socials }}{% endif %}" {% if block.settings.align %} data-align="{{ block.settings.align }}" {% endif %} {{ block.shopify_attributes }}>
        {% case block.type %}
        {% when "link" %}
          {%- if block.settings.button_label != blank -%}
            <a{% if block.settings.button_link != blank %} href="{{ block.settings.button_link }}"{% endif %} class="{% if block.settings.button_style %} button {% else %} link--text header__menu-item header-link {% endif %} {% if block.settings.button_style_secondary %} button--secondary{% else %} button--primary{% endif %}"{% if block.settings.button_link == blank %} aria-disabled="true"{% endif %} {% if block.settings.button_target %} target="_blank" rel="nofollower noopener noreferrer" {% endif %}>
              {{ block.settings.button_label | escape }}
            </a>
          {%- endif -%}
        {% when "content" %}
          <h4 class="heading" >{{ block.settings.title | escape }}</h4>
        {% when "logo" %}
          {% liquid
            if request.page_type == 'index'
              echo '<h1 class="header__heading">'
            endif
          %}
          <style>
            .header-logo {
              --ar: {{ 1 | divided_by: block.settings.image.aspect_ratio | times: 100 }}%;
              --mw: {{ block.settings.logo_width }}px;
              max-width: 100%; /* needed for the psuedoelement */
              width: {{ block.settings.logo_width | default: 150 }}px;
              margin: {{ block.settings.logo_padding_top | minus: 40 | default: 0 }}% auto {{ block.settings.logo_padding_bottom | minus: 40 | default: 0 }}%;
            }

            @media (max-width: 1000px) {
              .header-logo {
              --mw: {{ block.settings.logo_width_tablet }}px;
                width: {{ block.settings.logo_width_tablet | default: 100 }}px;
              }
            }
            @media (max-width: 600px) {
              .header-logo {
              --mw: {{ block.settings.logo_width_mobile }}px;
              max-width: calc(100vw - 140px);
                width: {{ block.settings.logo_width_mobile | default: 100 }}px;
              }
            }
          </style>
          <a href="{{ block.settings.url | default: routes.root_url }}" class="header-logo media media--adapt header__heading-link link link--text focus-inset {% if block.settings.socials_layout == 'before' or block.settings.socials_layout == 'after' %} flex-center {% endif %}">
            {%- if block.settings.image != blank -%}
              {% assign json_logo = block.settings.image | img_url: block.settings.image.width | prepend: "https:" | json %}
              {%- assign image_size = block.settings.logo_width | append: 'x' -%}
              {% if block.settings.overlay_image != blank and section.settings.enable_overlay == true %}
                <img srcset="{{ block.settings.overlay_image | img_url: image_size, scale: 2 }} 1x, {{ block.settings.overlay_image | img_url: image_size, scale: 4 }} 2x"
                  src="{{ block.settings.overlay_image | img_url: image_size }}"
                  loading="lazy"
                  class="header__heading-logo overlay-image"
                  width="{{ block.settings.overlay_image.width }}"
                  height="{{ block.settings.overlay_image.height }}"
                  alt="{{ block.settings.overlay_image.alt | default: shop.name | escape }}"
                >
              {% endif %}
              <img srcset="{{ block.settings.image | img_url: image_size, scale: 2 }} 1x, {{ block.settings.image | img_url: image_size, scale: 4 }} 2x"
                src="{{ block.settings.image | img_url: image_size }}"
                loading="lazy"
                class="header__heading-logo"
                width="{{ block.settings.image.width }}"
                height="{{ block.settings.image.height }}"
                alt="{{ block.settings.image.alt | default: shop.name | escape }}"
              >
            {%- else -%}
              <span class="h2">{{ shop.name }}</span>
            {%- endif -%}
          </a>
            {% liquid
              if request.page_type == 'index'
                echo '</h1>'
              endif
            %}
        {% when "socials" %}
          {%- render 'socials-ul' %}
        {% when "button" %}
          {% if block.settings.type == "search" %}
              {%- render 'search-modal' -%}
          {% elsif block.settings.type == "cart" %}
              {%- render 'cart-button' -%}
          {% elsif block.settings.type == "account" %}
              {%- render 'account-button' -%}
          {% endif %}
        {% when "menu" %}
          {% render 'header-menu' with menu: block.settings.menu, align: block.settings.align %}
        {% when "mobile_menu" %}
          {% liquid
            if block.settings.menu != blank
              assign breakpoint = 'tablet'
              if block.settings.visibility_large == true
                  assign breakpoint = ''
              elsif block.settings.visibility_medium == false
                assign breakpoint = 'mobile'
              endif
              render 'menu-drawer' with menu: block.settings.menu, breakpoint: breakpoint
            endif
          %}
        {% endcase %}
    </div><!--\.header__item-->
  {% comment %} Close  group if logo, mobile menu, spacer, or last item{% endcomment %}
    {% assign last_item_index = index %}
    {% assign index = index | plus: 1 %}
    {% assign next_block = section.blocks[index] %}
     {% if index == section.blocks.size or block.type == 'spacer' %}
       </div><!--\.header__group-->
          {% assign in_group = false %}
     {% elsif block.type == 'logo' %}
        {% if section.settings.layout == 'logo-stacked' and next_block.type == "menu" %}
          <!-- should be a stacked menu -->
        {% else %}
          </div><!--\.header__group-->
          {% assign in_group = false %}
        {% endif %}
    {% elsif block.type == 'menu' and section.settings.layout == 'logo-stacked' %}
      </div><!--\.header__group-->
        {% assign in_group = false %}
    {% elsif index == section.blocks.size or next_block.type == "spacer" or block.type == "mobile_menu" %}
     </div><!--\.header__group-->
      {% assign in_group = false %}
    {% comment %} Check if menu + socials (never put them in the same group {% endcomment %}
    {% elsif next_block.type == "socials" and block.type == "menu" %}
      </div><!--\.header__group-->
      {% assign in_group = false %}
    {% elsif next_block.type == "menu" and block.type == "socials" %}
      </div><!--\.header__group-->
      {% assign in_group = false %}
    {% endif %}
  {% endfor %}
  </header>
</site-header>

{%- render 'cart-notification', color_scheme: section.settings.color_scheme -%}

<script type="application/ld+json">
  {
    "@context": "http://schema.org",
    "@type": "Organization",
    "name": {{ shop.name | json }},
    {% if json_logo %}
      "logo": {{ json_logo }},
    {% endif %}
    "sameAs": [
      {{ settings.social_twitter_link | json }},
      {{ settings.social_facebook_link | json }},
      {{ settings.social_pinterest_link | json }},
      {{ settings.social_instagram_link | json }},
      {{ settings.social_tumblr_link | json }},
      {{ settings.social_snapchat_link | json }},
      {{ settings.social_youtube_link | json }},
      {{ settings.social_vimeo_link | json }}
    ],
    "url": {{ request.origin | append: page.url | json }}
  }
</script>

{%- if request.page_type == 'index' -%}
  {% assign potential_action_target = request.origin | append: routes.search_url | append: "?q={search_term_string}" %}
  <script type="application/ld+json">
    {
      "@context": "http://schema.org",
      "@type": "WebSite",
      "name": {{ shop.name | json }},
      "potentialAction": {
        "@type": "SearchAction",
        "target": {{ potential_action_target | json }},
        "query-input": "required name=search_term_string"
      },
      "url": {{ request.origin | append: page.url | json }}
    }
  </script>
{%- endif -%}