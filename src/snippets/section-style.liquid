{% comment %} Renders section style. Requires id and section settings object {% endcomment %}
{% liquid
if params.anchor_id != blank and id == blank
  assign final_id = params.anchor_id
  assign inner = true
else
  assign final_id = id
endif
%}


{%- comment -%}transitional padding stuff{%- endcomment -%}
{% capture padding_top %}{% unless params.padding_top != blank %}{% if params.spacing_top and params.spacing_top != blank %}{{params.spacing_top | divided_by: 12 }}{%- endif -%}{% else %}{{params.padding_top }}{% endunless %}{%endcapture %}
{% capture padding_bottom %}{% unless params.padding_bottom != blank %}{% if params.spacing_bottom and params.spacing_bottom != blank %}{{params.spacing_bottom | divided_by: 12 }}{%- endif -%}{% else %}{{params.padding_bottom }}{% endunless %}{%endcapture %}

<style>
  #{% unless inner %}shopify-section-{% endunless %}{{ final_id }} {
    padding-top: {{ padding_top |  divided_by: 0.75  }}px;
    padding-bottom: {{padding_bottom  |  divided_by: 0.75 }}px;
  }
 @media screen and (min-width: 750px) {
    #{% unless inner %}shopify-section-{% endunless %}{{ final_id }} {
      padding-top: {{ padding_top  }}px;
      padding-bottom: {{padding_bottom  }}px;
    }
  }
  {% if params.background_image != blank %}
  #{% unless inner %}shopify-section-{% endunless %}{{ final_id }} {
    position:relative;
    z-index: 3;
    {% if params.background_style == "fixed"  or params.background_style == "parallax" %}
      clip-path: polygon(0 0, 100% 0, 100% 100.1%, 0 100.1%);
      -webkit-backface-visibility: hidden;
      -moz-backface-visibility: hidden;
      backface-visibility: hidden;
    {% endif %}

  }
  #{% unless inner %}shopify-section-{% endunless %}{{ final_id }}::before {
    position: absolute;
    height: 100%;
    content: "";
    display: block;
    width: 100%;
    top: 0;
    background-position: {{params.background_position_x|default: 50}}% {{params.background_position_y|default: 50}}%;
    {% if params.background_opacity != 100 %}
    opacity: {{ params.background_opacity | times: 0.01 | default: 1 }};
    {% endif %}
    left: 0;
    z-index: 0;
    {% if params.background_style == "cover" or params.background_style == "contain"  %}
    background-image: url({{ params.background_image | img_url: "800x" }});
    background-size: {{ params.background_style }};
    background-repeat: no-repeat;
    {% elsif params.background_style == 'parallax'  or params.background_style == 'fixed' %}
    background-image: url({{ params.background_image | img_url: "800x" }});
     position: absolute;
     left: 0;
     width: 100%;
     background-repeat: no-repeat;
     background-size: cover;
    {% else %}
    background-image: url({{ params.background_image | img_url: "master" }});
    {% if params.background_style == "repeat-x" %}
    background-size: auto 100%;
    {% elsif params.background_style == "repeat-y" %}
    background-size: 100% auto;
    {% else %}
    background-size: {{ params.background_image.width | divided_by: 2 }}px;
    {% endif %}

    background-repeat: {{ params.background_style }};
    {% endif %}
    {% if params.background_style == 'parallax' %}
      --offset: clamp(-10%, calc(-20% * (0.5 - var(--scroll))), 10%);
      position: fixed;
      top: -10%;
      left: 0;
      height: 120%;
      width: 100%;
      transition: transform 10ms ease;
      transform: translateY(var(--offset));
    {% endif %}
  }
  {% endif %}

  {% if params.background_image != blank and params.background_style == "cover" or params.background_style == "contain" or params.background_style == "fixed" or params.background_style == "parallax"%}
  @media (min-width: 720px), (min-height: 500px) {
    #{% unless inner %}shopify-section-{% endunless %}{{ final_id }}::before {
      background-image: url({{ params.background_image | img_url: "1080x" }});
    }
  }
  @media (min-width: 1080px), (min-height: 580px) {
    #{% unless inner %}shopify-section-{% endunless %}{{ final_id }}::before {
      background-image: url({{ params.background_image | img_url: "1400x" }});
    }
  }
  @media (min-width: 1080px), (min-height: 650px) {
    #{% unless inner %}shopify-section-{% endunless %}{{ final_id }}::before {
      background-image: url({{ params.background_image | img_url: "1750x" }});
    }
  }
  @media (min-width: 1750px,  min-height: 740px) {
    #{% unless inner %}shopify-section-{% endunless %}{{ final_id }}::before {
      background-image: url({{ params.background_image | img_url: "2000x" }});
    }
  }
  @media (min-width: 2000px), (min-height: 840px) {
    #{% unless inner %}shopify-section-{% endunless %}{{ final_id }}::before {
      background-image: url({{ params.background_image | img_url: "2400x" }});
    }
  }
  {% endif %}

  {% if params.color_scheme != blank and params.color_scheme != 'disabled' %}
  #{% unless inner %}shopify-section-{% endunless %}{{ final_id }} {
    background: var(--gradient-background, rgb(var(--color-background)));
    color: rgb(var(--color-foreground));
    --color-link: var(--color-foreground);
    {% case params.color_scheme %}
      {% when 'accent-1' %}
    --color-foreground: var(--color-base-solid-button-labels);
    --color-background: var(--gradient-base-accent-1);
    --gradient-background: var(--gradient-base-accent-1);
      {% when 'accent-2' %}
    --color-foreground: var(--color-base-solid-button-labels);
    --color-background: var(--gradient-base-accent-2);
    --gradient-background: var(--gradient-base-accent-2);
      {% when 'transparent-light' %}
    --color-foreground: 255, 255, 255;
    --color-background: transparent;
      {% when 'transparent-dark' %}
    --color-foreground: 0, 0 , 0;
    --color-background: transparent;
      {% when 'background-1' %}
    --color-foreground: var(--color-base-text);
    --color-background: var(--color-base-background-1);
    --gradient-background: var(--gradient-base-background-1);
      {% when 'background-2' %}
    --color-foreground: var(--color-base-text);
    --color-background: var(--color-base-background-2);
    --gradient-background: var(--gradient-base-background-2);
      {% when 'inverse' %}
    --color-foreground: var(--color-base-background-1);
    --color-background: var(--color-base-text);
    background: rgb(var(--color-base-text));
    {% endcase %}

     {% if params.background_color != blank and params.background_color != transparent and params.background_color != 'rgba(0,0,0,0)' %}
    background-color: {{ params.background_color | default: "transparent" }};
    --color-background: {{ params.background_color.red }}, {{ params.background_color.green }},{{ params.background_color.blue }};
    {% endif %}
    {% if params.text_color != blank and params.text_color != transparent %}
    color: {{ params.text_color | default: "inherit" }};
    --color-foreground: {{ params.text_color.red }}, {{ params.text_color.green }}, {{ params.text_color.blue }};
    {% endif %}
  }

  {% endif %}
</style>